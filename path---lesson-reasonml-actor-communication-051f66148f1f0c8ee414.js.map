{"version":3,"sources":["webpack:///path---lesson-reasonml-actor-communication-051f66148f1f0c8ee414.js","webpack:///./.cache/json/lesson-reasonml-actor-communication.json"],"names":["webpackJsonp","389","module","exports","data","allPostTitles","edges","node","frontmatter","title","lesson","category","chapter","type","fields","slug","postBySlug","html","timeToRead","excerpt","cover","date","tags","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,eACAC,QAEAC,MACAC,aACAC,MAAA,kBACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,UAEAC,QACAC,KAAA,uBAKAR,MACAC,aACAC,MAAA,sBACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,UAEAC,QACAC,KAAA,2BAKAR,MACAC,aACAC,MAAA,wBACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,UAEAC,QACAC,KAAA,6BAKAR,MACAC,aACAC,MAAA,WACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,UAEAC,QACAC,KAAA,gBAKAR,MACAC,aACAC,MAAA,YACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,UAEAC,QACAC,KAAA,iBAKAR,MACAC,aACAC,MAAA,eACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,UAEAC,QACAC,KAAA,oBAKAR,MACAC,aACAC,MAAA,qBACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,UAEAC,QACAC,KAAA,0BAKAR,MACAC,aACAC,MAAA,UACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,UAEAC,QACAC,KAAA,eAKAR,MACAC,aACAC,MAAA,eACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,UAEAC,QACAC,KAAA,oBAKAR,MACAC,aACAC,MAAA,kBACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,UAEAC,QACAC,KAAA,uBAKAR,MACAC,aACAC,MAAA,WACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,UAEAC,QACAC,KAAA,gBAKAR,MACAC,aACAC,MAAA,cACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,UAEAC,QACAC,KAAA,mBAKAR,MACAC,aACAC,MAAA,WACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,UAEAC,QACAC,KAAA,iBAMAC,YACAC,KAAA,6rLACAC,WAAA,EACAC,QAAA,iJACAX,aACAC,MAAA,sBACAW,MAAA,+CACAC,KAAA,aACAV,SAAA,WACAW,MACA,kBACA,OACA,SACA,iBAGAR,QACAC,KAAA,0BAIAQ,aACAR,KAAA,uBACAJ,SAAA","file":"path---lesson-reasonml-actor-communication-051f66148f1f0c8ee414.js","sourcesContent":["webpackJsonp([168254311109196],{\n\n/***/ 389:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"allPostTitles\": {\n\t\t\t\t\"edges\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Getting Started\",\n\t\t\t\t\t\t\t\t\"lesson\": 2,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 1,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/getting-started\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Actor Communication\",\n\t\t\t\t\t\t\t\t\"lesson\": 2,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 2,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/actor-communication\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Decoders and Encoders\",\n\t\t\t\t\t\t\t\t\"lesson\": 2,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 4,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/decoders-and-encoders\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Adapters\",\n\t\t\t\t\t\t\t\t\"lesson\": 6,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 2,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/adapters\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Hierarchy\",\n\t\t\t\t\t\t\t\t\"lesson\": 4,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 2,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/hierarchy\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Introduction\",\n\t\t\t\t\t\t\t\t\"lesson\": 1,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 1,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/introduction\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Persistent Queries\",\n\t\t\t\t\t\t\t\t\"lesson\": 4,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 3,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/persistent-queries\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Persist\",\n\t\t\t\t\t\t\t\t\"lesson\": 1,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 3,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/persist\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Snapshotting\",\n\t\t\t\t\t\t\t\t\"lesson\": 2,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 3,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/snapshotting\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Stateful Actors\",\n\t\t\t\t\t\t\t\t\"lesson\": 1,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 2,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/stateful-actors\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Querying\",\n\t\t\t\t\t\t\t\t\"lesson\": 3,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 2,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/querying\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Supervision\",\n\t\t\t\t\t\t\t\t\"lesson\": 5,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 2,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/supervision\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Timeouts\",\n\t\t\t\t\t\t\t\t\"lesson\": 3,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 3,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/timeouts\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t\"postBySlug\": {\n\t\t\t\t\"html\": \"<p>An actor alone is a somewhat useless construct; actors need to work together. Actors can send messages to one another by using the <code>dispatch</code> method. </p>\\n<p>In this example, the actors Ping and Pong are playing a perfect ping-pong match. To start the match, we dispatch a message to ping and\\nspecify that the sender in msgType is pong.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-reason\\\"><code><span class=\\\"token keyword\\\">open</span> <span class=\\\"token constructor variable\\\">Nact</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">open</span> <span class=\\\"token class-name\\\">Nact</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token constructor variable\\\">Operators</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">let</span> system <span class=\\\"token operator\\\">=</span> start<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">type</span> msgType <span class=\\\"token operator\\\">=</span>\\n  <span class=\\\"token operator\\\">|</span> <span class=\\\"token constructor variable\\\">Msg</span><span class=\\\"token punctuation\\\">(</span>actorRef<span class=\\\"token punctuation\\\">(</span>msgType<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> string<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">let</span> ping<span class=\\\"token punctuation\\\">:</span> actorRef<span class=\\\"token punctuation\\\">(</span>msgType<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span>\\n  spawnStateless<span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">~</span>name<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"ping\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    system<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">(</span><span class=\\\"token constructor variable\\\">Msg</span><span class=\\\"token punctuation\\\">(</span>sender<span class=\\\"token punctuation\\\">,</span> msg<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> ctx<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      print_endline<span class=\\\"token punctuation\\\">(</span>msg<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      dispatch<span class=\\\"token punctuation\\\">(</span>sender<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constructor variable\\\">Msg</span><span class=\\\"token punctuation\\\">(</span>ctx<span class=\\\"token punctuation\\\">.</span>self<span class=\\\"token punctuation\\\">,</span> ctx<span class=\\\"token punctuation\\\">.</span>name<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">|</span><span class=\\\"token operator\\\">></span> <span class=\\\"token class-name\\\">Js</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">.</span>resolve\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">let</span> pong<span class=\\\"token punctuation\\\">:</span> actorRef<span class=\\\"token punctuation\\\">(</span>msgType<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span>\\n  spawnStateless<span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">~</span>name<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"pong\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    system<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">(</span><span class=\\\"token constructor variable\\\">Msg</span><span class=\\\"token punctuation\\\">(</span>sender<span class=\\\"token punctuation\\\">,</span> msg<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> ctx<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      print_endline<span class=\\\"token punctuation\\\">(</span>msg<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* Here we're using the &lt;-&lt; operator as a shorthand for the dispatch method */</span>\\n      sender <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token constructor variable\\\">Msg</span><span class=\\\"token punctuation\\\">(</span>ctx<span class=\\\"token punctuation\\\">.</span>self<span class=\\\"token punctuation\\\">,</span> ctx<span class=\\\"token punctuation\\\">.</span>name<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">|</span><span class=\\\"token operator\\\">></span> <span class=\\\"token class-name\\\">Js</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">.</span>resolve\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nping <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token constructor variable\\\">Msg</span><span class=\\\"token punctuation\\\">(</span>pong<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"hello\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>This produces the following console output:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>begin\\nping\\npong\\nping\\npong\\nping\\n...</code></pre>\\n      </div>\",\n\t\t\t\t\"timeToRead\": 1,\n\t\t\t\t\"excerpt\": \"An actor alone is a somewhat useless construct; actors need to work together. Actors can send messages to one another by using the   method...\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Actor Communication\",\n\t\t\t\t\t\"cover\": \"https://unsplash.it/400/300/?random?BoldMage\",\n\t\t\t\t\t\"date\": \"11/12/2017\",\n\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\"tags\": [\n\t\t\t\t\t\t\"getting-started\",\n\t\t\t\t\t\t\"nact\",\n\t\t\t\t\t\t\"reason\",\n\t\t\t\t\t\t\"bucklescript\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"fields\": {\n\t\t\t\t\t\"slug\": \"/actor-communication\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/actor-communication\",\n\t\t\t\"category\": \"reasonml\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---lesson-reasonml-actor-communication-051f66148f1f0c8ee414.js","module.exports = {\n\t\"data\": {\n\t\t\"allPostTitles\": {\n\t\t\t\"edges\": [\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Getting Started\",\n\t\t\t\t\t\t\t\"lesson\": 2,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 1,\n\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/getting-started\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Actor Communication\",\n\t\t\t\t\t\t\t\"lesson\": 2,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 2,\n\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/actor-communication\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Decoders and Encoders\",\n\t\t\t\t\t\t\t\"lesson\": 2,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 4,\n\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/decoders-and-encoders\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Adapters\",\n\t\t\t\t\t\t\t\"lesson\": 6,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 2,\n\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/adapters\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Hierarchy\",\n\t\t\t\t\t\t\t\"lesson\": 4,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 2,\n\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/hierarchy\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Introduction\",\n\t\t\t\t\t\t\t\"lesson\": 1,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 1,\n\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/introduction\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Persistent Queries\",\n\t\t\t\t\t\t\t\"lesson\": 4,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 3,\n\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/persistent-queries\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Persist\",\n\t\t\t\t\t\t\t\"lesson\": 1,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 3,\n\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/persist\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Snapshotting\",\n\t\t\t\t\t\t\t\"lesson\": 2,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 3,\n\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/snapshotting\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Stateful Actors\",\n\t\t\t\t\t\t\t\"lesson\": 1,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 2,\n\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/stateful-actors\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Querying\",\n\t\t\t\t\t\t\t\"lesson\": 3,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 2,\n\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/querying\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Supervision\",\n\t\t\t\t\t\t\t\"lesson\": 5,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 2,\n\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/supervision\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Timeouts\",\n\t\t\t\t\t\t\t\"lesson\": 3,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 3,\n\t\t\t\t\t\t\t\"type\": \"lesson\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/timeouts\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"postBySlug\": {\n\t\t\t\"html\": \"<p>An actor alone is a somewhat useless construct; actors need to work together. Actors can send messages to one another by using the <code>dispatch</code> method. </p>\\n<p>In this example, the actors Ping and Pong are playing a perfect ping-pong match. To start the match, we dispatch a message to ping and\\nspecify that the sender in msgType is pong.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-reason\\\"><code><span class=\\\"token keyword\\\">open</span> <span class=\\\"token constructor variable\\\">Nact</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">open</span> <span class=\\\"token class-name\\\">Nact</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token constructor variable\\\">Operators</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">let</span> system <span class=\\\"token operator\\\">=</span> start<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">type</span> msgType <span class=\\\"token operator\\\">=</span>\\n  <span class=\\\"token operator\\\">|</span> <span class=\\\"token constructor variable\\\">Msg</span><span class=\\\"token punctuation\\\">(</span>actorRef<span class=\\\"token punctuation\\\">(</span>msgType<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> string<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">let</span> ping<span class=\\\"token punctuation\\\">:</span> actorRef<span class=\\\"token punctuation\\\">(</span>msgType<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span>\\n  spawnStateless<span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">~</span>name<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"ping\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    system<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">(</span><span class=\\\"token constructor variable\\\">Msg</span><span class=\\\"token punctuation\\\">(</span>sender<span class=\\\"token punctuation\\\">,</span> msg<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> ctx<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      print_endline<span class=\\\"token punctuation\\\">(</span>msg<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      dispatch<span class=\\\"token punctuation\\\">(</span>sender<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token constructor variable\\\">Msg</span><span class=\\\"token punctuation\\\">(</span>ctx<span class=\\\"token punctuation\\\">.</span>self<span class=\\\"token punctuation\\\">,</span> ctx<span class=\\\"token punctuation\\\">.</span>name<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">|</span><span class=\\\"token operator\\\">></span> <span class=\\\"token class-name\\\">Js</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">.</span>resolve\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">let</span> pong<span class=\\\"token punctuation\\\">:</span> actorRef<span class=\\\"token punctuation\\\">(</span>msgType<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=</span>\\n  spawnStateless<span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">~</span>name<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"pong\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    system<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">(</span><span class=\\\"token constructor variable\\\">Msg</span><span class=\\\"token punctuation\\\">(</span>sender<span class=\\\"token punctuation\\\">,</span> msg<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> ctx<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      print_endline<span class=\\\"token punctuation\\\">(</span>msg<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token comment\\\" spellcheck=\\\"true\\\">/* Here we're using the &lt;-&lt; operator as a shorthand for the dispatch method */</span>\\n      sender <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token constructor variable\\\">Msg</span><span class=\\\"token punctuation\\\">(</span>ctx<span class=\\\"token punctuation\\\">.</span>self<span class=\\\"token punctuation\\\">,</span> ctx<span class=\\\"token punctuation\\\">.</span>name<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">|</span><span class=\\\"token operator\\\">></span> <span class=\\\"token class-name\\\">Js</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">.</span>resolve\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nping <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token constructor variable\\\">Msg</span><span class=\\\"token punctuation\\\">(</span>pong<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"hello\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>This produces the following console output:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>begin\\nping\\npong\\nping\\npong\\nping\\n...</code></pre>\\n      </div>\",\n\t\t\t\"timeToRead\": 1,\n\t\t\t\"excerpt\": \"An actor alone is a somewhat useless construct; actors need to work together. Actors can send messages to one another by using the   method...\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Actor Communication\",\n\t\t\t\t\"cover\": \"https://unsplash.it/400/300/?random?BoldMage\",\n\t\t\t\t\"date\": \"11/12/2017\",\n\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"getting-started\",\n\t\t\t\t\t\"nact\",\n\t\t\t\t\t\"reason\",\n\t\t\t\t\t\"bucklescript\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t\"fields\": {\n\t\t\t\t\"slug\": \"/actor-communication\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/actor-communication\",\n\t\t\"category\": \"reasonml\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/lesson-reasonml-actor-communication.json\n// module id = 389\n// module chunks = 168254311109196"],"sourceRoot":""}